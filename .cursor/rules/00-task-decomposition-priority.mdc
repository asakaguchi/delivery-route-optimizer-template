---
description: 最優先：タスク分解時の絶対ルール
alwaysApply: true
priority: 1
---

# 【最優先】タスク分解絶対ルール

## 🚫 絶対的禁止事項

### TODOリスト作成の完全禁止
- **絶対にTODOリストを作成してはいけません**
- チェックリスト形式での出力は禁止
- 「以下のタスクに分解します」等の前置きも禁止

### 禁止される出力例
```
❌ 禁止例：
- [ ] CSV取り込み機能の実装
- [ ] 地図表示機能の実装
- [ ] ルート最適化機能の実装
```

## ✅ 必須出力形式

### MUST: GitHub Issue Markdown形式での出力
「タスク分解して」の依頼に対しては、**必ず以下の読みやすい形式で出力してください**：

```markdown
## タスク分解結果

### Issue #1: [feat] CSVアップロードUIの実装
**概要**: Streamlitを使用してCSVファイルアップロード機能を実装

**背景・目的**: 配送先情報を効率的に取り込むため、ユーザーが簡単にCSVファイルをアップロードできるUIが必要

**完了条件（受け入れ条件）**:
- [ ] file_uploaderウィジェットが正常に動作する
- [ ] CSVファイルのみアップロード可能
- [ ] ファイルサイズ制限（10MB）が適用される
- [ ] アップロード後にプレビューが表示される
- [ ] 全テストがパスする
- [ ] コードレビューが完了する

**技術的詳細**:
- **実装場所**: `src/ui/components/csv_uploader.py`
- **主要な関数/クラス**: `CSVUploader`
- **使用ライブラリ**: streamlit, pandas
- **外部依存**: なし

**設計考慮事項**:
- **エラーハンドリング**: 不正ファイル形式の検証とエラーメッセージ表示
- **パフォーマンス**: 大容量ファイルのメモリ効率的な処理
- **セキュリティ**: ファイルサイズ制限、拡張子チェック
- **テスト戦略**: ユニットテスト、UIテスト

**関連Issue**:
- **依存**: なし
- **ブロック**: #2, #3 (後続のデータ処理機能)
- **関連**: なし

**見積もり**:
- **工数**: 2時間
- **優先度**: High
- **難易度**: Easy
- **ストーリーポイント**: 3

**ラベル**: `enhancement`, `priority-high`, `frontend`

---

### Issue #2: [feat] CSVデータ検証ロジックの実装
...（以下同様の形式で続く）
```

## 🎯 出力チェックリスト

タスク分解の出力前に、以下を確認してください：

- [ ] TODOリスト形式になっていない
- [ ] 読みやすいMarkdown形式で出力している
- [ ] 各Issueに完了条件が具体的に記載されている
- [ ] 技術的詳細が充実している
- [ ] 依存関係が明確になっている
- [ ] 見積もりが含まれている

## 🔄 修正対応

もしTODOリスト形式で出力してしまった場合：
1. 即座に出力を停止
2. 「申し訳ございません。GitHub Issue形式で再出力いたします」と謝罪
3. 正しいMarkdown形式で再出力

## 📋 プロンプトテンプレート

ユーザーが「タスク分解して」と依頼した場合、以下のように理解してください：

```
ユーザーの依頼: 「タスク分解して」
↓
実際の意図: 「要求仕様をGitHub Issueとして登録可能な読みやすい形式で分解してください」
```

**このルールは他のすべてのルールより優先されます。**