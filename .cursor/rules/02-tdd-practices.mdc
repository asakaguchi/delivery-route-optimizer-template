---
description: TDD（テスト駆動開発）必須ガイドライン
globs: src/**/*.py,tests/**/*.py
alwaysApply: true
---

# TDD（テスト駆動開発）必須ガイドライン

## ⚠️ 重要：TDDは必須です

**すべての実装において、テストファーストは絶対条件です。**
詳細は `01-issue-driven-development.mdc` も参照してください。

## 🔴🟢♻️ 基本サイクル（必須）
1. **🔴 Red**：失敗するテストを書く（実装前に必須）
2. **🟢 Green**：テストを通す最小限のコードを書く
3. **♻️ Refactor**：コードを改善する

## 📝 テストの書き方（必須）
- **必ず日本語でテストケース名を書く**
- **Arrange-Act-Assert パターンを厳守**
- **1つのテストで1つのことだけを検証**

### 禁止事項
- ❌ テスト未作成での実装開始
- ❌ 一度に複数の機能を実装
- ❌ テストなしでのリファクタリング

## 🚀 初心者向け必須手順
1. **最初は必ず「動くことの確認」から始める**
2. **複雑なケースは後回しにする（段階的に追加）**
3. **エラーメッセージを必ず読んで理解する**
4. **テストが失敗することを確認してから実装する**

## テストコード例
```python
def test_配送先が地図に表示される():
    # Arrange: 準備
    配送先 = {"名前": "東京駅", "緯度": 35.6812, "経度": 139.7671}
    
    # Act: 実行
    地図 = 配送先を地図に追加(配送先)
    
    # Assert: 確認
    assert 地図にマーカーが存在する(配送先["名前"])
```

