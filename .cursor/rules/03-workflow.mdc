---
description: 開発ワークフローガイド
alwaysApply: true
---

# 開発ワークフローガイド

## GitHub Issue駆動開発

### 基本フロー
1. **Issue選択**: 優先度とブロッカーを考慮して1つのIssueを選択
2. **ブランチ作成**: `feature/issue-番号` または `fix/issue-番号`
3. **TDD実装**: テストファーストで実装
4. **コミット**: Conventional Commits形式で頻繁にコミット
5. **PR作成**: Issue番号を含むPRを作成
6. **マージ**: レビュー完了後、Issueクローズ

### Issue作成時の注意点
- 09-task-decomposition.mdc の手法に従う
- 完了条件を明確に定義
- 依存関係を「関連Issue」セクションで明示
- 技術的詳細を充実させる

## コミットメッセージ規約

### 形式
```
<type>(<scope>): <subject>

<body>

<footer>
```

### タイプ
- **feat**: 新機能追加
- **fix**: バグ修正
- **test**: テスト追加・修正
- **docs**: ドキュメント更新
- **refactor**: リファクタリング
- **style**: コードスタイル修正
- **chore**: ビルド設定等

### 例
```
feat(csv): 配送先のCSV読み込み機能を追加

- pandasを使用してCSVファイルを読み込み
- データ検証機能を実装
- エラーハンドリングを追加

Closes #1
```

## 品質管理

### 実装前チェックリスト
- [ ] Issueの完了条件を理解
- [ ] 依存Issueが完了している
- [ ] 技術的アプローチが明確

### 実装後チェックリスト
- [ ] 全テストがパス
- [ ] リント・フォーマットが通る
- [ ] 完了条件を満たしている
- [ ] 適切なコミットメッセージ

