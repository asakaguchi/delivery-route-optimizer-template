---
description: ドキュメント規約
globs: "**/*.md"
alwaysApply: false
---

# ドキュメント規約

## 基本原則
- 読者目線で書く
- 具体例を多用する
- 視覚的に分かりやすく構成する

## ドキュメントの種類

### 1. README.md
- プロジェクトの概要
- クイックスタート
- 主な機能
- インストール方法
- 使用方法
- 貢献方法

### 2. 要件定義書
- ビジネス要件
- 機能要件
- 非機能要件
- 制約事項

### 3. 設計書
- アーキテクチャ図
- データモデル
- API仕様
- 画面設計

### 4. 運用マニュアル
- デプロイ手順
- 監視項目
- トラブルシューティング

## Markdown記法

### 見出し
```markdown
# 大見出し（H1）
## 中見出し（H2）
### 小見出し（H3）
```

### リスト
```markdown
- 箇条書き項目1
- 箇条書き項目2
  - ネストした項目

1. 番号付きリスト1
2. 番号付きリスト2
```

### コードブロック
````markdown
```python
def hello_world():
    print("Hello, World!")
```
````

### 表
```markdown
| カラム1 | カラム2 | カラム3 |
|---------|---------|---------|
| データ1 | データ2 | データ3 |
| データ4 | データ5 | データ6 |
```

### リンクと画像
```markdown
[リンクテキスト](URL)
![代替テキスト](画像URL)
```

### 引用
```markdown
> 引用文
> 複数行の引用
```

### 強調
```markdown
**太字**
*斜体*
~~取り消し線~~
`インラインコード`
```

## 良いドキュメントの例

### Before（改善前）
```
この関数は計算をします。
```

### After（改善後）
```markdown
## calculate_route()

配送先のリストから最適な配送ルートを計算します。

### パラメータ
- `points` (List[Dict]): 配送先のリスト。各要素は以下の形式：
  ```python
  {
      "name": "配送先名",
      "lat": 35.6812,    # 緯度
      "lon": 139.7671    # 経度
  }
  ```

### 戻り値
- `Tuple[List[int], float]`: (訪問順序のリスト, 総距離)

### 使用例
```python
points = [
    {"name": "東京駅", "lat": 35.6812, "lon": 139.7671},
    {"name": "新宿駅", "lat": 35.6896, "lon": 139.7006}
]

order, distance = calculate_route(points)
print(f"訪問順序: {order}")  # [0, 1]
print(f"総距離: {distance}km")  # 7.8km
```

### 注意事項
- 配送先は最大100件まで
- 計算時間は配送先数の2乗に比例して増加
```

